// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  email    String? @unique
  password String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Goal Goal[]
}

model Goal {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  period      Int

  user    User       @relation(fields: [userId], references: [id])
  Backlog WorkItem[]
  userId  Int
}

model WorkItem {
  id     Int    @id @default(autoincrement())
  title  String
  goal   Goal   @relation(fields: [goalId], references: [id])
  goalId Int

  createdAt DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  TimeLine  TimeLine[]
}

model TimeLine {
  id        Int      @id @default(autoincrement())
  title     String
  dateStart DateTime
  dateEnd   DateTime
  workItem  WorkItem @relation(fields: [workItemId], references: [id])
  Task      Task[]

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  workItemId Int
}

model Task {
  id         Int      @id @default(autoincrement())
  date       DateTime
  text       String
  isComplete String

  timeLine TimeLine @relation(fields: [timeLineId], references: [id])

  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt
  timeLineId Int
}
